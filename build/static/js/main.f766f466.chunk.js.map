{"version":3,"sources":["api.js","components/LatestQuakes.jsx","components/ThisMonthsQuakes.jsx","components/TopTwentyAllTime.jsx","components/PastYearsQuakes.jsx","utils/utils.js","components/TodaysQuakes.jsx","components/QuakeChart.jsx","components/QuakeList.jsx","components/BottomBar.jsx","components/QuakeMap.jsx","App.js","serviceWorker.js","index.js"],"names":["fetchTwentyMostRecent","axios","get","then","data","features","LatestQuakes","props","className","sideBar","onClick","updateSideBar","updateloading","api","quakes","updateQuakes","ThisMonthsQuakes","TopTwentyAllTime","PastYearsQuakes","createGraphData","array","newObj","datasets","backgroundColor","label","labels","forEach","earthquake","push","properties","place","mag","getDateForPopUp","UTCdate","date","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","dateString","console","log","TodaysQuakes","todayDateString","dateObject","getDateString","today","QuakeChart","state","formattedQuakeData","this","width","height","options","maintainAspectRatio","dataForGraphing","setState","prevProps","Component","QuakeList","map","quake","key","id","setActiveQuake","BottomBar","quakeData","QuakeMap","activeQuake","loading","returnedQuakes","currentState","dateForPopUp","time","resetActiveQuake","override","css","size","radius","margin","padding","color","Map","center","zoom","TileLayer","url","attribution","Marker","position","geometry","coordinates","Popup","onClose","href","tsunami","prevState","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f766f466.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const fetchTwentyMostRecent = () => {\n  return axios\n    .get(\n      \"https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&limit=50\"\n    )\n    .then(({ data: { features } }) => {\n      return features;\n    });\n};\n\nexport const fetchAllThisMonth = () => {\n  return axios\n    .get(\n      \"https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=2020-03-01&minmagnitude=5.0\"\n    )\n    .then(({ data: { features } }) => {\n      return features;\n    });\n};\n\nexport const fetchTopTwentyThisMonth = () => {\n  return axios\n    .get(\n      \"https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=2020-03-01&minmagnitude=5.0&limit=20&orderby=magnitude\"\n    )\n    .then(({ data: { features } }) => {\n      return features;\n    });\n};\n\nexport const fetchTopTwentyThisYear = () => {\n  return axios\n    .get(\n      \"https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=2020-01-01&minmagnitude=5.0&limit=50&orderby=magnitude\"\n    )\n    .then(({ data: { features } }) => {\n      return features;\n    });\n};\n\nexport const fetchToday = today => {\n  return axios\n    .get(\n      \"https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&orderby=magnitude&starttime=\" +\n        `${today}`\n    )\n    .then(({ data: { features } }) => {\n      return features;\n    });\n};\nexport const fetchTopTwentyAllTime = () => {\n  return axios\n    .get(\n      \"https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=1900-01-01&minmagnitude=5.0&limit=50&orderby=magnitude\"\n    )\n    .then(({ data: { features } }) => {\n      return features;\n    });\n};\n","import React from \"react\";\nimport * as api from \"../api\";\n\nfunction LatestQuakes(props) {\n  return (\n    <p\n      className={props.sideBar[0] ? \"selected\" : null}\n      onClick={() => {\n        props.updateSideBar([true, null, null, null, null]);\n        props.updateloading();\n        api.fetchTwentyMostRecent().then(quakes => props.updateQuakes(quakes));\n      }}\n    >\n      latest quakes\n    </p>\n  );\n}\n\nexport default LatestQuakes;\n","import React from \"react\";\nimport * as api from \"../api\";\n\nfunction ThisMonthsQuakes(props) {\n  return (\n    <p\n      className={props.sideBar[1] ? \"selected\" : null}\n      onClick={() => {\n        props.updateSideBar([null, true, null, null, null]);\n        props.updateloading();\n\n        api.fetchAllThisMonth().then(quakes => props.updateQuakes(quakes));\n      }}\n    >\n      This Months Quakes (moderate+)\n    </p>\n  );\n}\n\nexport default ThisMonthsQuakes;\n","import React from \"react\";\nimport * as api from \"../api\";\n\nfunction TopTwentyAllTime(props) {\n  return (\n    <p\n      className={props.sideBar[2] ? \"selected\" : null}\n      onClick={() => {\n        props.updateSideBar([null, null, true, null, null]);\n        props.updateloading();\n        api.fetchTopTwentyAllTime().then(quakes => props.updateQuakes(quakes));\n      }}\n    >\n      top twenty since 1900\n    </p>\n  );\n}\n\nexport default TopTwentyAllTime;\n","import React from \"react\";\nimport * as api from \"../api\";\n\nfunction PastYearsQuakes(props) {\n  return (\n    <p\n      className={props.sideBar[3] ? \"selected\" : null}\n      onClick={() => {\n        props.updateSideBar([null, null, null, true, null]);\n        props.updateloading();\n        api.fetchTopTwentyThisYear().then(quakes => props.updateQuakes(quakes));\n      }}\n    >\n      top 50 this year\n    </p>\n  );\n}\n\nexport default PastYearsQuakes;\n","export const createGraphData = array => {\n  const newObj = {\n    datasets: [\n      {\n        data: [],\n        backgroundColor: [\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#46b1c9\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#f56416\",\n          \"#4392f1\",\n          \"#403f4c\",\n          \"#3ddc97\",\n          \"#fdca40\",\n          \"#89043d\",\n          \"#36A2EB\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#46b1c9\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#f56416\",\n          \"#4392f1\",\n          \"#403f4c\",\n          \"#3ddc97\",\n          \"#fdca40\",\n          \"#89043d\",\n          \"#36A2EB\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#46b1c9\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#f56416\",\n          \"#4392f1\",\n          \"#403f4c\",\n          \"#3ddc97\",\n          \"#fdca40\",\n          \"#89043d\",\n          \"#36A2EB\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#46b1c9\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#f56416\",\n          \"#4392f1\",\n          \"#403f4c\",\n          \"#3ddc97\",\n          \"#fdca40\",\n          \"#89043d\",\n          \"#36A2EB\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#46b1c9\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#f56416\",\n          \"#4392f1\",\n          \"#403f4c\",\n          \"#3ddc97\",\n          \"#fdca40\",\n          \"#89043d\",\n          \"#36A2EB\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#46b1c9\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#f56416\",\n          \"#4392f1\",\n          \"#403f4c\",\n          \"#3ddc97\",\n          \"#fdca40\",\n          \"#89043d\",\n          \"#36A2EB\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#46b1c9\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#f56416\",\n          \"#4392f1\",\n          \"#403f4c\",\n          \"#3ddc97\",\n          \"#fdca40\",\n          \"#89043d\",\n          \"#36A2EB\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#46b1c9\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#f56416\",\n          \"#4392f1\",\n          \"#403f4c\",\n          \"#3ddc97\",\n          \"#fdca40\",\n          \"#89043d\",\n          \"#36A2EB\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#46b1c9\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#f56416\",\n          \"#4392f1\",\n          \"#403f4c\",\n          \"#3ddc97\",\n          \"#fdca40\",\n          \"#89043d\",\n          \"#36A2EB\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#46b1c9\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#f56416\",\n          \"#4392f1\",\n          \"#403f4c\",\n          \"#3ddc97\",\n          \"#fdca40\",\n          \"#89043d\",\n          \"#36A2EB\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#46b1c9\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#f56416\",\n          \"#4392f1\",\n          \"#403f4c\",\n          \"#3ddc97\",\n          \"#fdca40\",\n          \"#89043d\",\n          \"#36A2EB\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#46b1c9\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\",\n          \"#f56416\",\n          \"#4392f1\",\n          \"#403f4c\",\n          \"#3ddc97\",\n          \"#fdca40\",\n          \"#89043d\",\n          \"#36A2EB\",\n          \"#FF6384\",\n          \"#4BC0C0\",\n          \"#FFCE56\",\n          \"#36A2EB\",\n          \"#fff275\",\n          \"#dd2d4a\",\n          \"#16f4d0\"\n        ],\n        label: \"MAGNITUDE\" // for legend\n      }\n    ],\n    labels: []\n  };\n  array.forEach(earthquake => {\n    newObj.labels.push(earthquake.properties.place);\n    newObj.datasets[0].data.push(earthquake.properties.mag);\n  });\n  return newObj;\n};\n\nexport const getDateString = dateObject => {\n  const day = dateObject.getDate();\n  const month = dateObject.getMonth() + 1;\n  const year = dateObject.getFullYear();\n  const dateString = `${year}-${month}-${day}`;\n\n  return dateString;\n};\n\nexport const getDateForPopUp = UTCdate => {\n  const date = new Date(UTCdate);\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const dateString = `${hours}:${minutes} GMT ${day}-${month}-${year}`;\n  console.log(dateString);\n\n  return dateString;\n};\n","import React from \"react\";\nimport * as api from \"../api\";\nimport { getDateString } from \"../utils/utils\";\n\nfunction TodaysQuakes(props) {\n  return (\n    <p\n      className={props.sideBar[4] ? \"selected\" : null}\n      onClick={() => {\n        const today = new Date();\n        const todayDateString = getDateString(today);\n        props.updateSideBar([null, null, null, null, true]);\n        props.updateloading();\n\n        api\n          .fetchToday(todayDateString)\n          .then(quakes => props.updateQuakes(quakes));\n      }}\n    >\n      todays quakes\n    </p>\n  );\n}\n\nexport default TodaysQuakes;\n","import React, { Component } from \"react\";\nimport { createGraphData } from \"../utils/utils\";\nimport { HorizontalBar } from \"react-chartjs-2\";\n\nclass QuakeChart extends Component {\n  state = { formattedQuakeData: {} };\n  render() {\n    return (\n      <div className=\"quakeChartContainer\">\n        <HorizontalBar\n          data={this.state.formattedQuakeData}\n          width={800}\n          height={200}\n          options={{\n            maintainAspectRatio: false\n          }}\n        />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    const dataForGraphing = createGraphData(this.props.quakes);\n    this.setState({ formattedQuakeData: dataForGraphing });\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.quakes !== this.props.quakes) {\n      const dataForGraphing = createGraphData(this.props.quakes);\n      this.setState({ formattedQuakeData: dataForGraphing });\n    }\n  }\n}\n\nexport default QuakeChart;\n","import React from \"react\";\n\nfunction QuakeList(props) {\n  return (\n    <div className=\"quakeListContainer\">\n      <ul className=\"quakeList\">\n        {props.quakes.map(quake => {\n          return (\n            <li key={quake.id} className=\"quakeListItem\">\n              <p\n                onClick={() => {\n                  props.setActiveQuake(quake);\n                }}\n              >\n                {quake.properties.place}\n              </p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default QuakeList;\n","import React from \"react\";\nimport QuakeChart from \"./QuakeChart.jsx\";\nimport QuakeList from \"./QuakeList.jsx\";\n\nfunction BottomBar(props) {\n  return (\n    <div className=\"bottomBar\">\n      <div className=\"thanks\">\n        <p>\n          all data from for earthquakes hazard programme API:\n          https://earthquake.usgs.gov/\n        </p>\n      </div>\n      <QuakeChart\n        quakes={props.quakeData}\n        setActiveQuake={props.setActiveQuake}\n      />\n      <QuakeList\n        quakes={props.quakeData}\n        setActiveQuake={props.setActiveQuake}\n      />\n    </div>\n  );\n}\n\nexport default BottomBar;\n","import React, { Component } from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport * as api from \"../api\";\nimport LatestQuakes from \"./LatestQuakes.jsx\";\nimport ThisMonthsQuakes from \"./ThisMonthsQuakes.jsx\";\nimport TopTwentyAllTime from \"./TopTwentyAllTime.jsx\";\nimport PastYearsQuakes from \"./PastYearsQuakes.jsx\";\nimport TodaysQuakes from \"./TodaysQuakes.jsx\";\nimport BottomBar from \"./BottomBar.jsx\";\nimport { getDateForPopUp } from \"../utils/utils\";\nimport { css } from \"@emotion/core\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\n\nclass QuakeMap extends Component {\n  state = {\n    quakeData: null,\n    activeQuake: null,\n    sideBar: [true, null, null, null, null],\n    date: \"\",\n    loading: true\n  };\n\n  render() {\n    const { activeQuake, quakeData } = this.state;\n    const override = css;\n\n    return (\n      <>\n        {this.state.loading ? (\n          <div className=\"loadingSection\">\n            <h1 className=\"loading\">LOADING QUAKEDATA</h1>\n            <div className=\"sweet-loading\">\n              <ScaleLoader\n                css={override}\n                size={150}\n                height={40}\n                width={10}\n                radius={4}\n                margin={10}\n                padding={5}\n                color=\"gray\"\n                loading={this.state.loading}\n              />\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div className=\"mapSection\">\n              <Map center={[10, -66]} zoom={2.4}>\n                <TileLayer\n                  url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n                  attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                />\n                {quakeData.map(quake => {\n                  return (\n                    <Marker\n                      key={quake.id}\n                      position={[\n                        quake.geometry.coordinates[1],\n                        quake.geometry.coordinates[0]\n                      ]}\n                      onClick={() => {\n                        this.setActiveQuake(quake);\n                      }}\n                    />\n                  );\n                })}\n                )}\n                {activeQuake && (\n                  <Popup\n                    position={[\n                      activeQuake.geometry.coordinates[1],\n                      activeQuake.geometry.coordinates[0]\n                    ]}\n                    onClose={() => {\n                      this.resetActiveQuake();\n                    }}\n                  >\n                    <div className=\"popUp\">\n                      {console.log(activeQuake)}\n                      <h2>\n                        location:\n                        <a href={` ${activeQuake.properties.url}`}>\n                          {activeQuake.properties.place}\n                        </a>\n                      </h2>\n                      <p>time of quake: {this.state.date}</p>\n                      <p> magnitude:{activeQuake.properties.mag}</p>\n                      <p>\n                        tsunami: {activeQuake.properties.tsunami ? \"yes\" : \"no\"}\n                      </p>\n                    </div>\n                  </Popup>\n                )}\n                )}\n              </Map>\n              <div className=\"sideBar\">\n                <p className=\"dataquake\">DATAQUAKE</p>\n                <LatestQuakes\n                  updateloading={this.updateloading}\n                  updateQuakes={this.updateQuakes}\n                  updateSideBar={this.updateSideBar}\n                  sideBar={this.state.sideBar}\n                />\n                <ThisMonthsQuakes\n                  updateloading={this.updateloading}\n                  updateQuakes={this.updateQuakes}\n                  updateSideBar={this.updateSideBar}\n                  sideBar={this.state.sideBar}\n                />\n                <PastYearsQuakes\n                  updateloading={this.updateloading}\n                  updateQuakes={this.updateQuakes}\n                  updateSideBar={this.updateSideBar}\n                  sideBar={this.state.sideBar}\n                />\n                <TodaysQuakes\n                  updateloading={this.updateloading}\n                  updateQuakes={this.updateQuakes}\n                  updateSideBar={this.updateSideBar}\n                  sideBar={this.state.sideBar}\n                />\n                <TopTwentyAllTime\n                  updateloading={this.updateloading}\n                  updateQuakes={this.updateQuakes}\n                  updateSideBar={this.updateSideBar}\n                  sideBar={this.state.sideBar}\n                />\n              </div>\n            </div>\n            <BottomBar\n              quakeData={this.state.quakeData}\n              setActiveQuake={this.setActiveQuake}\n            />\n          </div>\n        )}\n      </>\n    );\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    api.fetchTwentyMostRecent().then(quakes => this.updateQuakes(quakes));\n  }\n\n  compoenentDidUpdate(prevState) {\n    if (prevState.activeQuake !== this.state.activeQuake) {\n      this.setState({\n        date: getDateForPopUp(this.state.activeQuake.properties.time)\n      });\n    }\n  }\n  updateSideBar = array => {\n    this.setState({ sideBar: array });\n  };\n\n  updateloading = () => {\n    this.setState({ loading: true });\n  };\n  updateQuakes = returnedQuakes => {\n    this.setState({ quakeData: returnedQuakes, loading: false });\n  };\n  setActiveQuake = quake => {\n    this.setState(currentState => {\n      const dateForPopUp = getDateForPopUp(quake.properties.time);\n      return { activeQuake: quake, date: dateForPopUp };\n    });\n  };\n\n  resetActiveQuake = () => {\n    this.setState({ activeQuake: null });\n  };\n}\n\nexport default QuakeMap;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport QuakeMap from \"./components/QuakeMap\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"wholePage\">\n        <QuakeMap />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}